unit Stack;

interface
uses
  Unit1, Generics.Collections;

type
  TStack<T> = class
  private
    FData: TArray<T>;
    FTop: Integer;
  public
    constructor Create;
    /// <summary>     入栈     </summary>
    procedure Push(const Item: T);
    /// <summary>     出栈     </summary>
    function Pop: T;
    /// <summary>     判断栈是否为空   </summary>
    function isEmpty: Boolean;
  end;

  TNumberStack = class(TStack<Real>)
  end;
  TOperatorStack = class(TStack<Char>)
  end;


implementation
uses
  SysUtils;
constructor TStack<T>.Create;
begin
  SetLength(FData, 10);
  FTop:= -1;          //空栈索引为-1
end;

procedure TStack<T>.Push(const Item: T);
begin
  Inc(FTop);            //相当于FTop:= FTop+1
  FData[FTop] := Item;
end;

function TStack<T>.Pop: T;
begin
  Result:= FData[FTop];
  Dec(FTop);
end;

function TStack<T>.isEmpty: Boolean;
begin
  Result := FTop = -1;
end;

end.
